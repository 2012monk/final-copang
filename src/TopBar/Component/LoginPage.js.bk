import React, { useState } from "react";
import { withRouter } from "react-router-dom";
import { loginUser } from "../../_actions/user_actions";
import { Formik } from 'formik';
import * as Yup from 'yup';
import { FormControl as Form, Button, Input, Checkbox, Typography } from '@material-ui/core';
import { useDispatch } from "react-redux";
import PermIdentityRoundedIcon from '@material-ui/icons/PermIdentityRounded';
import axios from 'axios';
import "../css/loginpage.css";
//const Title = Typography;

function LoginPage(props) {
  const [Username, setUsername] = useState("");
  const dispatch = useDispatch();
  const [Password, setPassword] = useState("");

  const onUsernameHandler = (e) => {
    setUsername(e.currentTarget.value);
  };
  const onPasswordHanlder = (e) => {
    setPassword(e.currentTarget.value);
  };

  const onSubmitHandler = (values, {setSubmitting}) => {
    this.preventDefault();
    const dataToSubmit = {
      // username: Username,
      // password: Password,
      username: values.sername,
      password: values.Password,
    };
    dispatch(loginUser(dataToSubmit))
      .then((response) => {
        console.log(response);
        const accessToken = response.payload.data.access_token;
        window.localStorage.setItem('accessToken', accessToken);
        axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;
        if (response.payload.message === 'success') {
          props.history.push("/");
        } else {
          alert(response.payload.message);
        }
      })
      .catch((err) => {
        console.log(err);
      });
    setSubmitting(false);
  };


  // const rememberMeChecked = localStorage.getItem("rememberMe") ? true : false; //email 저장
  // const [formErrorMessage, setFormErrorMessage] = useState('')
  // const [rememberMe, setRememberMe] = useState(rememberMeChecked)
  // const handleRememberMe = () => {
  //   setRememberMe(!rememberMe)
  // };
  //const initialUserName = localStorage.getItem("rememberMe") ? localStorage.getItem("rememberMe") : '';

  return (
    <div
      style={{
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        width: "100%",
        height: "100vh",
      }}>
      <form
        
        style={{ display: "flex", flexDirection: "column" }}>
        <label>아이디</label>
        <input type="text" value={Username} onChange={onUsernameHandler} />
        <label>비밀번호</label>
        <input type="password" value={Password} onChange={onPasswordHanlder} />
        <br />
        <button type="button" className="login__button" onSubmit={onSubmitHandler}>Login</button>
      </form>
    </div>

  );
};

export default withRouter(LoginPage);


